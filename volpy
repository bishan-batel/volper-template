#!/usr/bin/env python

import os
import sys

# shebang, import,

MAKE_FILE_SOURCE = open("Makefile", "r").readlines()


def get_test_count():
    count = 0
    files = os.listdir(".")

    while True:
        count += 1
        if not (f"out{count}" in files):
            return count


def main():

    if os.system("make") != 0:
        print("Failed to compile")
        sys.exit(1)

    failed = []

    count = get_test_count()
    for i in range(count):
        if os.system(f"make {i}") != 0:
            failed.append(f"{i}")

    if len(failed) == 0:
        print("Normal tests succeeded, running memory checks")
        for i in range(count):
            if not any(map(lambda line: f"mem{i}" in line, MAKE_FILE_SOURCE)):
                continue
            if os.system(f"make mem{i}") != 0:
                failed.append(f"mem{i}")

    for fail in failed:
        print(f"Failed test {fail}")

    if len(failed) > 0:
        sys.exit(1)

    cmd = "zip submission"

    for file in os.listdir("."):
        if file.startswith("driver."):
            continue

        if any(map(lambda x: file.endswith(x), [".c", ".cpp", ".h", '.hpp'])):
            cmd += f" {file}"
    os.system(cmd)
    print("Zipped Submission to submission.zip")


main()
sys.exit(0)
